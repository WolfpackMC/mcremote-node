generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ApiKey {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accountId Int
  account   Account  @relation("AccountToApiKey", fields: [accountId], references: [id])
}

model Account {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  ApiKeys   ApiKey[]   @relation("AccountToApiKey")
  endpoints Endpoint[]
}

model Endpoint {
  id              Int               @id @default(autoincrement())
  name            String
  url             String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  accountId       Int
  BigReactor      BigReactor[]
  account         Account           @relation(fields: [accountId], references: [id])
  gauges          Gauge[]
  redstones       Redstone[]
  InductionMatrix InductionMatrix[]
}

model Gauge {
  id         Int      @id @default(autoincrement())
  name       String
  value      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  endpointId Int
  endpoint   Endpoint @relation(fields: [endpointId], references: [id])
}

model Redstone {
  id         Int      @id @default(autoincrement())
  name       String
  state      Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  endpointId Int
  endpoint   Endpoint @relation(fields: [endpointId], references: [id])
}

model InductionMatrix {
  id                     Int      @id @default(autoincrement())
  name                   String
  energy                 Float
  energyFilledPercentage Float
  energyNeeded           Float
  installedCells         Int
  installedProviders     Int
  lastInput              Float
  lastOutput             Float
  maxEnergy              Float
  transferCap            Float
  active                 Boolean
  length                 Int
  width                  Int
  height                 Int
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  endpointId             Int
  endpoint               Endpoint @relation(fields: [endpointId], references: [id])
}

model BigReactor {
  id                 Int      @id @default(autoincrement())
  name               String
  active             Boolean  @default(false)
  ambientTemperature Float    @default(0)
  apiVersion         String   @default("0.0.0")
  capacity           Int      @default(0)
  producedLastTick   Int      @default(0)
  stored             Int      @default(0)
  casingTemperature  Float    @default(0)
  connected          Boolean  @default(false)
  controlRodCount    Int      @default(0)
  fuelTemperature    Float    @default(0)
  stackTemperature   Float    @default(0)
  fuelBurnedLastTick Float    @default(0)
  fuelReactivity     Float    @default(0)
  fuelWaste          Int      @default(0)
  createdAt          DateTime @default(now())
  updatedAt          DateTime
  endpointId         Int
  totalFuel          Int      @default(0)
  insertionValue     Float    @default(0)
  Endpoint           Endpoint @relation(fields: [endpointId], references: [id])
}
